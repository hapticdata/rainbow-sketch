define(["require","exports","module","../internals","../internals","../math/mathUtils","../math/LinearInterpolation","./ColorList"],function(t,e,n){var i=t("../internals").filter,r=t("../internals").numberCompare,s=t("../math/mathUtils"),o=t("../math/LinearInterpolation"),a=t("./ColorList"),u=function(t,e){this.pos=t,this.color=e};u.prototype={compareTo:function(t){return 0===r(t.pos,this.pos)?0:this.pos<t.pos?-1:1},getColor:function(){return this.color},getPosition:function(){return this.pos}};var l=function(){this.gradient=[],this.interpolator=new o,this.maxDither=0};l.prototype={addColorAt:function(t,e){this.gradient.push(new u(t,e))},calcGradient:function(t,e){if(0===arguments.length){t=this.gradient[0].getPosition();var n=this.gradient[this.gradient.length-1].getPosition();e=Math.floor(n-t)}var r=new a;if(0===this.gradient.length)return r;var o,u,l=0,c=t+e,h=0,d=this.gradient.length;for(h=0;d>h;h++)t>this.gradient[h].pos&&(o=this.gradient[h]);var f,p=void 0===o;p?(f=this.gradient,o=this.gradient[0]):f=i(this.gradient,function(t){return t.pos>=o.pos});var m=0;if(h=0,d=f.length,o!==f[d-1])if(u=f[h],p){var _=o.pos-t;m=s.abs(_)>0?1/_:1}else u.pos-o.pos>0&&(m=1/(u.pos-o.pos));for(;c>t;){if(l=p?1-(o.pos-t)*m:(t-o.pos)*m,l>1&&(o=u,p=!1,h++,f.length>h&&(u=f[h],m=o!==f[d-1]?1/(u.pos-o.pos):0,l=(t-o.pos)*m)),o!==f[d-1]){var g=s.clip(l+s.normalizedRandom()*this.maxDither,0,1);g=this.interpolator.interpolate(0,1,g),r.add(o.color.getBlended(u.color,g))}else r.add(o.color.copy());t++}return r},getGradientPoints:function(){return this.gradient},getInterpolator:function(){return this.interpolator},getMaxDither:function(){return this.maxDither},setInterpolator:function(t){this.interpolator=t},setMaxDither:function(t){this.maxDither=s.clip(t,0,1)}},n.exports=l});