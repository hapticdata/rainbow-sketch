define(["require","exports","module","../Line3D","../../internals","../../math/mathUtils","../Matrix4x4","./Face","../Vec3D","../Triangle3D","../Quaternion","./Vertex","../AABB","../Sphere","../../internals","../Line3D","../Vec3D","./Vertex","./Face","./WingedEdge","./subdiv/MidpointSubdivision","../../internals","../../math/mathUtils","../../math/Interpolation2D","../Ray3D","../TriangleIntersector","../Triangle3D","../IsectData3D","../vectors","../vectors","../Vec3D","../Vec2D"],function(t,e){function i(t){var e=1e6,i=function(t){return Math.floor(t*e)/e};return"[ x: "+i(t.x)+", y: "+i(t.y)+", z: "+i(t.z)+"]"}function n(e){var i=t("../Line3D");return i.prototype.toString.call(e)}var r,s,o,a;(function(){var e=t("../../internals"),n=t("../../math/mathUtils"),o=t("../Matrix4x4"),a=t("./Face"),h=t("../Vec3D"),u=t("../Triangle3D"),c=t("../Quaternion"),l=t("./Vertex");r=function(t){return void 0===t&&(t="untitled"),this.init(t),this},r.__vertexKeyGenerator=i,r.DEFAULT_NUM_VERTICES=1e3,r.DEFAULT_NUM_FACES=3e3,r.DEFAULT_STRIDE=4,r.prototype={addFace:function(t,e,i,n,r,s,o){6==arguments.length&&(o=s,s=r,r=n,n=void 0);var h=this.__checkVertex(t),u=this.__checkVertex(e),c=this.__checkVertex(i);if(h.id===u.id||h.id===c.id||u.id===c.id);else{if(void 0!==n){var l=h.sub(c).crossSelf(h.sub(u));if(0>n.dot(l)){var d=h;h=u,u=d}}var f=new a(h,u,c,r,s,o);this.faces.push(f)}return this},addMesh:function(t){for(var e=t.getFaces().length,i=0;e>i;i++){var n=t.getFaces()[i];this.addFace(n.a,n.b,n.c)}return this},center:function(t){this.computeCentroid();for(var e=void 0!==t?t.sub(this.centroid):this.centroid.getInverted(),i=this.vertices.length,n=0;i>n;n++){var r=this.vertices[n];r.addSelf(e)}return this.getBoundingBox()},__checkVertex:function(t){var e=this.vertexMap.get(t);return void 0===e&&(e=this._createVertex(t,this.uniqueVertexID++),this.vertexMap.put(e,e)),e},clear:function(){return this.vertexMap=new e.LinkedMap(i),this.vertices=this.vertexMap.getArray(),this.faces=[],this.bounds=void 0,this},computeCentroid:function(){this.centroid.clear();for(var t=this.vertices.length,e=0;t>e;e++)this.centroid.addSelf(this.vertices[e]);return this.centroid.scaleSelf(1/this.vertexMap.size()).copy()},computeFaceNormals:function(){for(var t=this.faces.length,e=0;t>e;e++)this.faces[e].computeNormal()},computeVertexNormals:function(){var t=this.vertices.length,e=0;for(e=0;t>e;e++)this.vertices[e].clearNormal();for(t=this.faces.length,e=0;t>e;e++){var i=this.faces[e];i.a.addFaceNormal(i.normal),i.b.addFaceNormal(i.normal),i.c.addFaceNormal(i.normal)}for(t=this.vertices.length,e=0;t>e;e++)this.vertices[e].computeNormal();return this},copy:function(){for(var t=new r(this.name+"-copy",this.vertexMap.size(),this.faces.length),e=this.faces.length,i=0;e>i;i++){var n=this.faces[i];t.addFace(n.a,n.b,n.c,n.normal,n.uvA,n.uvB,n.uvC)}return t},_createVertex:function(t,e){var i=new l(t,e);return i},faceOutwards:function(){this.computeCentroid();for(var t=this.faces.length,e=0;t>e;e++){var i=this.faces[e],n=i.getCentroid().sub(this.centroid),r=n.dot(i.normal);0>r&&i.flipVertexOrder()}return this},flipVertexOrder:function(){for(var t=this.faces.length,e=0;t>e;e++){var i=this.faces[e],n=i.a;i.a=i.b,i.b=n,i.normal.invert()}return this},flipYAxis:function(){return this.transform((new o).scaleSelf(1,-1,1)),this.flipVerteAxOrder(),this},getBoundingBox:function(){for(var e=t("../AABB"),i=this,n=h.MAX_VALUE.copy(),r=h.MIN_VALUE.copy(),s=i.vertices.length,o=0;s>o;o++){var a=i.vertices[o];n.minSelf(a),r.maxSelf(a)}return i.bounds=e.fromMinMax(n,r),i.bounds},getBoundingSphere:function(){var e=t("../Sphere"),i=0;this.computeCentroid();for(var r=this.vertices.length,s=0;r>s;s++){var o=this.vertices[s];i=n.max(i,o.distanceToSquared(this.centroid))}var a=new e(this.centroid,Math.sqrt(i));return a},getClosestVertexToPoint:function(t){for(var e,i=Number.MAX_VALUE,n=this.vertices.length,r=0;n>r;r++){var s=this.vertices[r],o=s.distanceToSquared(t);i>o&&(e=s,i=o)}return e},getFaceNormalsAsArray:function(t,e,i){if(0===arguments.length)t=void 0,e=0,i=r.DEFAULT_STRIDE;else if(1==arguments.length&&"object"==typeof arguments[0]){var s=arguments[0];t=s.normals,e=s.offset,i=s.stride}i=n.max(i,3),void 0===t&&(t=[]);for(var o=e,a=this.faces.length,h=0;a>h;h++){var u=this.faces[h];t[o]=u.normal.x,t[o+1]=u.normal.y,t[o+2]=u.normal.z,o+=i,t[o]=u.normal.x,t[o+1]=u.normal.y,t[o+2]=u.normal.z,o+=i,t[o]=u.normal.x,t[o+1]=u.normal.y,t[o+2]=u.normal.z,o+=i}return t},getFaces:function(){return this.faces},getFacesAsArray:function(){for(var t=[],e=0,i=this.faces.length,n=0;i>n;n++){var r=this.faces[n];t[e++]=r.a.id,t[e++]=r.b.id,t[e++]=r.c.id}return t},getIntersectionData:function(){return this.intersector.getIntersectionData()},getMeshAsVertexArray:function(t,e,i){void 0===t&&(t=void 0),void 0===e&&(e=0),void 0===i&&(i=r.DEFAULT_STRIDE),i=n.max(i,3),void 0===t&&(t=[]);for(var s=0,o=this.faces.length,a=0;o>a;++a){var h=this.faces[a];t[s]=h.a.x,t[s+1]=h.a.y,t[s+2]=h.a.z,s+=i,t[s]=h.b.x,t[s+1]=h.b.y,t[s+2]=h.b.z,s+=i,t[s]=h.c.x,t[s+1]=h.c.y,t[s+2]=h.c.z,s+=i}return t},getNumFaces:function(){return this.faces.length},getNumVertices:function(){return this.vertexMap.size()},getRotatedAroundAxis:function(t,e){return this.copy().rotateAroundAxis(t,e)},getRotatedX:function(t){return this.copy().rotateX(t)},getRotatedY:function(t){return this.copy().rotateY(t)},getRotatedZ:function(t){return this.copy().rotateZ(t)},getScaled:function(t){return this.copy().scale(t)},getTranslated:function(t){return this.copy().translate(t)},getUniqueVerticesAsArray:function(){for(var t=[],e=0,i=this.vertices.length,n=0;i>e;n++){var r=this.vertices[n];t[e++]=r.x,t[e++]=r.y,t[e++]=r.z}return t},getVertexAtPoint:function(t){for(var e,i=0;this.vertices.length>i;i++)this.vertices[i].equals(t)&&(e=i);return this.vertices[e]},getVertexIndex:function(t){for(var e=-1,i=this.vertices.length,n=0;i>n;n++){var r=this.vertices[n];r.equals(t)&&(e=n)}return e},getVertexForID:function(t){for(var e,i=this.vertices.length,n=0;i>n;n++){var r=this.vertices[n];if(r.id==t){e=r;break}}return e},getVertexNormalsAsArray:function(t,e,i){void 0===e&&(e=0),void 0===i&&(i=r.DEFAULT_STRIDE),i=n.max(i,3),void 0===t&&(t=[]);for(var s=e,o=this.faces.length,a=0;o>a;a++){var h=this.faces[a];t[s]=h.a.normal.x,t[s+1]=h.a.normal.y,t[s+2]=h.a.normal.z,s+=i,t[s]=h.b.normal.x,t[s+1]=h.b.normal.y,t[s+2]=h.b.normal.z,s+=i,t[s]=h.c.normal.x,t[s+1]=h.c.normal.y,t[s+2]=h.c.normal.z,s+=i}return t},getVertices:function(){return this.vertices},handleSaveAsSTL:function(){throw Error("TriangleMesh.handleSaveAsSTL() currently not implemented")},init:function(t){this.setName(t),this.matrix=new o,this.centroid=new h,this.vertexMap=new e.LinkedMap(i),this.vertices=this.vertexMap.getArray(),this.faces=[],this.uniqueVertexID=0},intersectsRay:function(){throw Error("intersectsRay not yet implemented")},perforateFace:function(t,e){var i=t.getCentroid(),n=1-e,r=t.a.interpolateTo(i,n),s=t.b.interpolateTo(i,n),o=t.c.interpolateTo(i,n);return this.removeFace(t),this.addFace(t.a,s,r),this.addFace(t.a,t.b,s),this.addFace(t.b,o,s),this.addFace(t.b,t.c,o),this.addFace(t.c,r,o),this.addFace(t.c,t.a,r),new u(r,s,o)},pointTowards:function(t,e){return e=e||h.Z_AXIS,this.transform(c.getAlignmentQuat(t,e).toMatrix4x4(this.matrix),!0)},removeFace:function(t){for(var e=-1,i=this.faces.length,n=0;i>n;n++)if(this.faces[n]==t){e=n;break}e>-1&&this.faces.splice(e,1)},rotateAroundAxis:function(t,e){return this.transform(this.matrix.identity().rotateAroundAxis(t,e))},rotateX:function(t){return this.transform(this.matrix.identity().rotateX(t))},rotateY:function(t){return this.transform(this.matrix.identity().rotateY(t))},rotateZ:function(t){return this.transform(this.matrix.identity().rotateZ(t))},saveAsOBJ:function(t,e){void 0===e&&(e=!0);var i=t.getCurrVertexOffset()+1,n=t.getCurrNormalOffset()+1;t.newObject(this.name);var r,s=0,o=0,a=this.vertices.length,h=this.faces.length;for(s=0;a>s;s++)t.vertex(this.vertices[s]);if(e){for(s=0;a>s;s++)t.normal(this.vertices[s].normal);for(o=0;h>o;o++)r=this.faces[o],t.faceWithNormals(r.b.id+i,r.a.id+i,r.c.id+i,r.b.id+n,r.a.id+n,r.c.id+n)}else for(o=0;h>o;o++)r=this.faces[o],t.face(r.b.id+i,r.a.id+i,r.c.id+i)},saveAsSTL:function(){throw Error("TriangleMesh.saveAsSTL() currently not implemented")},scale:function(t){return this.transform(this.matrix.identity().scaleSelf(t))},setName:function(t){return this.name=t,this},toString:function(){return"TriangleMesh: "+this.name+" vertices: "+this.getNumVertices()+" faces: "+this.getNumFaces()},toWEMesh:function(){return new s(this.name).addMesh(this)},transform:function(t,e){void 0===e&&(e=!0);for(var i=this.vertices.length,n=0;i>n;n++){var r=this.vertices[n];r.set(t.applyTo(r))}return e&&this.computeFaceNormals(),this},translate:function(t,e,i){return 1==arguments.length&&(e=t.y,i=t.z,t=t.x),this.transform(this.matrix.identity().translateSelf(t,e,i))},updateVertex:function(t,e){var i=this.vertexMap.get(t);return void 0!==i&&(this.vertexMap.remove(i),i.set(e),this.vertexMap.put(e,i)),this}}})(),function(e){var r,o=t("../../internals"),a=t("../Line3D"),h=t("../Vec3D"),u=t("./Vertex").WEVertex,c=t("./Face").WEFace,l=t("./WingedEdge"),d=t("./subdiv/MidpointSubdivision");s=function(t){t=t||"untitled",e.call(this,t)},s.DEFAULT_NUM_FACES=e.DEFAULT_NUM_FACES,s.DEFAULT_NUM_VERTICES=e.DEFAULT_NUM_VERTICES,o.extend(s,e),r=s.prototype,r.addFace=function(t,e,i,n,r,s,o){6===arguments.length&&(o=s,s=r,r=n,n=void 0);var a,h,u,l=this.__checkVertex(t),d=this.__checkVertex(e),f=this.__checkVertex(i);return l.id===d.id||l.id===f.id||d.id===f.id?console.log("Ignoring invalid face: "+t+","+e+","+i):(void 0!==n&&null!==n&&(a=l.sub(f).crossSelf(l.sub(d)),0>n.dot(a)&&(h=l,l=d,d=h)),u=new c(l,d,f,r,s,o),this.faces.push(u),this.updateEdge(l,d,u),this.updateEdge(d,f,u),this.updateEdge(f,l,u)),this},r.center=function(t,i){e.prototype.center.call(this,t,i),this.rebuildIndex()},r.clear=function(){return e.prototype.clear.call(this),this.edgeMap=new o.LinkedMap(n),this.edges=this.edgeMap.getArray(),this},r.copy=function(){var t,e,i,n=new s(this.name+"-copy");for(e=this.faces.length,t=0;e>t;t++)i=this.faces[t],n.addFace(i.a,i.b,i.c,i.normal,i.uvA,i.uvB,i.uvC);return n},r._createVertex=function(t,e){var i=new u(t,e);return i},r.getNumEdges=function(){return this.edgeMap.size()},r.init=function(t){e.prototype.init.call(this,t),this.edgeMap=new o.LinkedMap(n),this.edges=this.edgeMap.getArray(),this.__edgeCheck=new a(new h,new h),this.__uniqueEdgeID=0},r.rebuildIndex=function(){var t=new o.LinkedMap(i),e=new o.LinkedMap(n);this.vertexMap.each(function(e){t.put(e,e)}),this.edgeMap.each(function(t){e.put(t,t)}),this.vertexMap=t,this.vertices=t.getArray(),this.edgeMap=e,this.edges=e.getArray()},r.removeEdge=function(t){var e=this;t.remove();var i=t.a;0===i.edges.length&&this.vertexMap.remove(i),i=t.b,0===i.edges.length&&this.vertexMap.remove(i),o.each(t.faces,function(t){e.removeFace(t)});var n=this.edgeMap.remove(this.__edgeCheck.set(t.a,t.b));if(n!==t)throw Error("Can't remove edge")},r.removeFace=function(t){var e=this,i=this.faces.indexOf(t);i>-1&&this.faces.splice(i,1),o.each(t.edges,function(i){i.faces.splice(i.faces.indexOf(t),1),0===i.faces.length&&e.removeEdge(i)})},r.removeUnusedVertices=function(){o.each(this.vertices,function(t,e){var i=!1;o.each(this.faces,function(e){return e.a==t||e.b==t||e.c==t?(i=!0,void 0):void 0}),i||this.vertices.splice(e,1)})},r.removeVertices=function(t){o.each(t,function(t){o.each(t.edges,function(t){o.each(t.faces,function(t){this.removeFace(t)})})})},r.splitEdge=function(t,e,i){var n,r;3===arguments.length?n=this.edgeMap.get(this.__edgeCheck.set(t,e)):2==arguments.length&&(n=t,i=e),r=i.computeSplitPoints(n),this.splitFace(n.faces[0],n,r),n.faces.length>1&&this.splitFace(n.faces[1],n,r),this.removeEdge(n)},r.splitFace=function(t,e,i){var n,r,s,o,a,h;for(r=0;3>r;r++)if(s=t.edges[r],!s.equals(e)){n=s.a.equals(e.a)||s.a.equals(e.b)?s.b:s.a;break}for(a=i.length,r=0;a>r;r++)h=i[r],0===r?this.addFace(n,e.a,h,t.normal):this.addFace(n,o,h,t.normal),r===a-1&&this.addFace(n,h,e.b,t.normal),o=h},r.subdivide=function(t,e){1===arguments.length&&(e=t,t=new d),this.subdivideEdges(this.edges.slice(0),t,e)},r.subdivideEdges=function(t,e,i){t.sort(e.getEdgeOrdering()),i*=i;var n=0,r=t.length;for(n=0;r>n;n++){var s=t[n];this.edges.indexOf(s)>-1&&s.getLengthSquared()>=i&&this.splitEdge(s,e)}},r.subdivideFaceEdges=function(t,e,i){var n,r,s,o,a,h,u=[];for(a=this.faces.length,n=0;a>n;n++)for(s=this.faces[n],h=s.edges.length,r=0;h>r;r++)o=s.edges[r],0>u.indexOf(o)&&u.push(o);this.subdividEdges(u,e,i)},r.toString=function(){return"WETriangleMesh: "+this.name+" vertices: "+this.getNumVertices()+" faces: "+this.getNumFaces()+" edges:"+this.getNumEdges()},r.transform=function(t,e){(void 0===e||null===e)&&(e=!0);for(var i=0,n=this.vertices.length;n>i;i++)t.applyToSelf(this.vertices[i]);return this.rebuildIndex(),e&&this.computeFaceNormals(),this},r.updateEdge=function(t,e,i){this.__edgeCheck.set(t,e);var n=this.edgeMap.get(this.__edgeCheck);void 0!==n?n.addFace(i):(n=new l(t,e,i,this.__uniqueEdgeID++),this.edgeMap.put(n,n),t.addEdge(n),e.addEdge(n)),i.addEdge(n)}}(r),function(e){var i=t("../../internals"),n=t("../../math/mathUtils"),r=t("../../math/Interpolation2D"),s=t("../Ray3D"),a=t("../TriangleIntersector"),h=t("../Triangle3D"),u=t("../IsectData3D"),c=t("../vectors").Vec2D,l=t("../vectors").Vec3D;o=function(t,e,n){this.width=t,this._depth=e,i.tests.hasXY(n)||(n=new c(n,n)),this.setScale(n),this.elevation=[];var r=0,s=t*e;for(r=0;s>r;r++)this.elevation[r]=0;this.__elevationLength=this.width*this._depth,this.vertices=[];var o=new l(parseInt(this.width/2,10),0,parseInt(this._depth/2,10)),a=this.getScale().to3DXZ();r=0;for(var h=0;this._depth>h;h++)for(var u=0;this.width>u;u++)this.vertices[r++]=new l(u,0,h).subSelf(o).scaleSelf(a)},o.prototype={getDepth:function(){return this._depth},getElevation:function(){return this.elevation},getHeightAtCell:function(t,e){return this.elevation[this._getIndex(t,e)]},getHeightAtPoint:function(t,e){var i=t/this._scale.x+.5*this.width,s=e/this._scale.y+.5*this._depth,o=0,a={xx:parseInt(i,10),zz:parseInt(s,10)};if(i>=0&this.width>i&&s>=0&&this._depth>s){var h=parseInt(n.min(i+1,this.width-1),10),u=parseInt(n.min(s+1,this._depth-1),10),c=this.getHeightAtCell(a.xx,a.zz),l=this.getHeightAtCell(h,a.zz),d=this.getHeightAtCell(a.xx,u),f=this.getHeightAtCell(h,u);o=r.bilinear(i,s,a.xx,a.zz,h,u,c,l,d,f)}return o},_getIndex:function(t,e){var i=e*this.width+t;if(0>i||i>this.__elevationLength)throw Error("the given terrain cell is invalid: "+t+";"+e);return i},getScale:function(){return this._scale},getVertexAtCell:function(t,e){return this.vertices[this._getIndex(t,e)]},getWidth:function(){return this.width},intersectAtPoint:function(t,e){var i=t/this._scale.x+.5*this.width,r=e/this._scale.y+.5*this._depth,o=new u;if(i>=0&&this.width>i&&r>=0&&this._depth>r){var c=parseInt(n.min(i+1,this.width-1),10),d=parseInt(n.min(r+1,this._depth-1),10),f={xx:parseInt(i,10),zz:parseInt(r,10)},p=this.getVertexAtCell(f.xx,f.zz),m=this.getVertexAtCell(c,f.zz),g=this.getVertexAtCell(c,d),v=this.getVertexAtCell(f.xx,d),_=new s(new l(t,1e4,e),new l(0,-1,0)),x=new a(new h(p,m,v));x.intersectsRay(_)?o=x.getIntersectionData():(x.setTriangle(new h(m,g,v)),x.intersectsRay(_),o=x.getIntersectionData())}return o},setElevation:function(t){if(this.__elevationLength!=t.length)throw Error("the given elevation array size does not match terrain");for(var e=0,i=t.length;i>e;e++)this.vertices[e].y=this.elevation[e]=t[e];return this},setHeightAtCell:function(t,e,i){var n=this._getIndex(t,e);return this.elevation[n]=i,this.vertices[n].y=i,this},setScale:function(t){i.tests.hasXY(t)||(t=new c(t,t)),this._scale=t},toMesh:function(){var t={mesh:void 0,minX:0,minZ:0,maxX:this.width,maxZ:this._depth},i=this.vertices,r=this.width,s=this._depth;if(1==arguments.length&&"object"==typeof arguments[0]){var o=arguments[0];t.mesh=o.mesh||new e("terrain"),t.minX=o.minX||t.minX,t.minZ=o.minZ||t.minZ,t.maxX=o.maxX||t.maxX,t.maxZ=o.maxZ||t.maxZ}else arguments.length>=5&&(t.mesh=arguments[0],t.minX=arguments[1],t.minZ=arguments[2],t.maxX=arguments[3],t.maxZ=arguments[4]);t.mesh=t.mesh||new e("terrain"),t.minX=n.clip(t.minX,0,r-1),t.maxX=n.clip(t.maxX,0,r),t.minZ=n.clip(t.minZ,0,s-1),t.maxZ=n.clip(t.maxZ,0,s),t.minX++,t.minZ++;for(var a=t.minZ,h=t.minX*r;t.maxZ>a;a++,h+=r)for(var u=t.minX;t.maxX>u;u++)t.mesh.addFace(i[h-r+u-1],i[h-r+u],i[h+u-1]),t.mesh.addFace(i[h-r+u],i[h+u],i[h+u-1]);return t.mesh}}}(r),function(e){var i=t("../Vec3D"),n=t("../Vec2D");a=function(t){this.func=t},a.prototype={createMesh:function(){var t={mesh:void 0,resolution:0,size:1,isClosed:!0};if(1==arguments.length)if("object"==typeof arguments[0]){var r=arguments[0];t.mesh=r.mesh,t.resolution=r.res||r.resoultion||0,void 0!==r.size&&(t.size=r.size),void 0!==r.isClosed&&(t.isClosed=r.isClosed)}else t.resolution=arguments[0];else arguments.length>2&&(t.mesh=arguments[0],t.resolution=arguments[1],t.size=arguments[2],4==arguments.length&&(t.isClosed=arguments[3]));var s=t.mesh;(void 0===s||null===s)&&(s=new e);for(var o=new i,a=new i,h=new i,u=new i,c=new i,l=new i,d=this.func.getPhiResolutionLimit(t.resolution),f=this.func.getPhiRange(),p=this.func.getThetaResolutionLimit(t.resolution),m=this.func.getThetaRange(),g=1/d,v=1/p,_=1/t.resolution,x=new n,y=new n,b=new n,w=new n,E=0;d>E;E++)for(var A=E*f*_,C=(E+1)*f*_,S=0;p>=S;S++){var M=S*m*_,T=this.func;o=T.computeVertexFor(o,C,M).scaleSelf(t.size),b.set(S*v,1-(E+1)*g),a=T.computeVertexFor(a,A,M).scaleSelf(t.size),w.set(S*v,1-E*g),a.equalsWithTolerance(o,1e-4)&&a.set(o),S>0?(S==p&&t.isClosed&&(o.set(c),a.set(l)),s.addFace(h,u,o,x.copy(),y.copy(),b.copy()),s.addFace(u,a,o,y.copy(),w.copy(),b.copy())):(c.set(o),l.set(a)),h.set(o),u.set(a),x.set(b),y.set(w)}return s},getFunction:function(){return this.func},setFunction:function(t){this.func=t}}}(r),e.TriangleMesh=r,e.WETriangleMesh=s,e.Terrain=o,e.SurfaceMeshBuilder=a});