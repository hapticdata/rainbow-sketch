define(["require","exports","module"],function(t,e,i){var n=function(t){this.mesh=t,this.selection=[]};n.prototype={addSelection:function(t){return this.checkMeshIdentity(t.getMesh()),this.selection=this.selection.concat(t.getSelection()),this},checkMeshIdentity:function(t){if(t!=this.mesh)throw Error("The given selector is not using the same mesh instance")},clearSelection:function(){return this.selection=[],this},getMesh:function(){return this.mesh},getSelection:function(){return this.selection},invertSelection:function(){for(var t=[],e=this.mesh.getVertices(),i=e.length,n=0;i>n;n++){var r=e[n];0>this.selection.indexOf(r)&&t.push(r)}return this.selection=t,this},selectSimilar:function(t){for(var e=t.length,i=0;e>i;i++){var n=t[i];this.selection.push(this.mesh.getClosestVertexToPoint(n))}return this},selectVertices:function(){return this},setMesh:function(t){this.mesh=t,this.clearSelection()},size:function(){return this.selection.length},subtractSelection:function(t){this.checkMeshIdentity(t.getMesh());var e,i=t.getSelection(),n=i.length;for(e=0;n>e;e++)this.selection.splice(this.selection.indexOf(i[e]),1);return this}},i.exports=n});