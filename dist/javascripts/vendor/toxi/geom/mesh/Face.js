define(["require","exports","module","../Triangle3D","../../internals"],function(t,e,i){var n,r;(function(){var e=t("../Triangle3D");n=function(t,e,i,n,r,s){this.a=t,this.b=e,this.c=i;var o=this.a.sub(this.c),a=this.a.sub(this.b),u=o.crossSelf(a);this.normal=u.normalize(),this.a.addFaceNormal(this.normal),this.b.addFaceNormal(this.normal),this.c.addFaceNormal(this.normal),void 0!==n&&(this.uvA=n,this.uvB=r,this.uvC=s)},n.prototype={computeNormal:function(){this.normal=this.a.sub(this.c).crossSelf(this.a.sub(this.b)).normalize()},flipVertexOrder:function(){var t=this.a;this.a=this.b,this.b=t,this.normal.invert()},getCentroid:function(){return this.a.add(this.b).addSelf(this.c).scale(1/3)},getClass:function(){return"Face"},getVertices:function(t){return void 0!==t?(t[0]=this.a,t[1]=this.b,t[2]=this.c):t=[this.a,this.b,this.c],t},toString:function(){return this.getClass()+" "+this.a+", "+this.b+", "+this.c},toTriangle:function(){return new e(this.a.copy(),this.b.copy(),this.c.copy())}}})(),function(){var e,i=t("../../internals");r=function(t,e,i,r,s,o){n.call(this,t,e,i,r,s,o),this.edges=[]},i.extend(r,n),e=r.prototype,e.addEdge=function(t){this.edges.push(t)},e.getEdges=function(){return this.edges},e.getVertices=function(t){return void 0!==t?(t[0]=this.a,t[1]=this.b,t[2]=this.c):t=[this.a,this.b,this.c],t}}(),n.WEFace=r,i.exports=n});