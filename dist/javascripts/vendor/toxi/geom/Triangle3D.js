define(["require","exports","module","../math/mathUtils","./Vec3D","./Line3D","./AABB"],function(t,e,i){var n=t("../math/mathUtils"),r=t("./Vec3D"),s=t("./Line3D"),o=t("./AABB"),h=function(t,e,i){this.a=t,this.b=e,this.c=i};h.createEquilateralFrom=function(t,e){var i=t.interpolateTo(e,.5),r=e.sub(t),s=t.cross(r.normalize());return i.addSelf(s.normalizeTo(r.magnitude()*n.SQRT3/2)),new h(t,e,i)},h.isClockwiseInXY=function(t,e,i){var n=(e.x-t.x)*(i.y-t.y)-(i.x-t.x)*(e.y-t.y);return 0>n},h.isClockwiseInXZ=function(t,e,i){var n=(e.x-t.x)*(i.z-t.z)-(i.x-t.x)*(e.z-t.z);return 0>n},h.isClockwiseInYZ=function(t,e,i){var n=(e.y-t.y)*(i.z-t.z)-(i.y-t.y)*(e.z-t.z);return 0>n},h.prototype={closestPointOnSurface:function(t){var e=this.b.sub(this.a),i=this.c.sub(this.a),n=this.c.sub(this.b),r=t.sub(this.a),s=t.sub(this.b),o=t.sub(this.c),h=a.sub(this.p),u=b.sub(this.p),l=c.sub(this.p),d=r.dot(e),f=r.dot(i);if(0>=d&&0>=f)return this.a;var p=s.dot(this.a.sub(this.b)),m=o.dot(this.a.sub(this.c)),g=s.dot(n),v=o.dot(this.b.sub(this.c));if(0>=p&&0>=g)return this.b;if(0>=m&&0>=v)return this.c;var y=e.cross(i),x=y.dot(h.crossSelf(u));if(0>=x&&d>=0&&p>=0)return this.a.add(e.scaleSelf(d/(d+p)));var _=y.dot(u.crossSelf(l));if(0>=_&&g>=0&&v>=0)return this.b.add(n.scaleSelf(g/(g+v)));var w=y.dot(l.crossSelf(h));if(0>=w&&f>=0&&m>=0)return this.a.add(i.scaleSelf(f/(f+m)));var S=_/(_+w+x),A=w/(_+w+x),E=1-S-A;return this.a.scale(S).addSelf(this.b.scale(A)).addSelf(this.c.scale(E))},computeCentroid:function(){return this.centroid=this.a.add(this.b).addSelf(this.c).scaleSelf(1/3),this.centroid},computeNormal:function(){return this.normal=this.a.sub(this.c).crossSelf(this.a.sub(this.b)).normalize(),this.normal},containsPoint:function(t){if(t.equals(this.a)||t.equals(this.b)||t.equals(this.c))return!0;var e=t.sub(this.a).normalize(),i=t.sub(this.b).normalize(),r=t.sub(this.c).normalize(),s=Math.acos(e.dot(i));return s+=Math.acos(i.dot(r)),s+=Math.acos(r.dot(e)),.005>=n.abs(s-n.TWO_PI)},flipVertexOrder:function(){return this.a,this.a=this.c,this.c=this.t,this},fromBarycentric:function(t){return new r(this.a.x*t.x+this.b.x*t.y+this.c.x*t.z,this.a.y*t.x+this.b.y*t.y+this.c.y*t.z,this.a.z*t.x+this.b.z*t.y+this.c.z*t.z)},getBoundingBox:function(){var t=r.min(r.min(this.a,this.b),this.c),e=r.max(r.max(this.a,this.b),this.c);return o.fromMinMax(t,e)},getClosestPointTo:function(t){var e=new s(this.a,this.b),i=e.closestPointTo(t),n=e.set(this.b,this.c).closestPointTo(t),r=e.set(this.c,this.a).closestPointTo(t),o=t.sub(i).magSquared(),a=t.sub(n).magSquared(),h=t.sub(r).magSquared(),u=o,c=i;return u>a&&(u=a,c=n),u>h&&(c=r),c},isClockwiseInXY:function(){return h.isClockwiseInXY(this.a,this.b,this.c)},isClockwiseInXZ:function(){return h.isClockwiseInXY(this.a,this.b,this.c)},isClockwiseInYZ:function(){return h.isClockwiseInXY(this.a,this.b,this.c)},set:function(t,e,i){this.a=t,this.b=e,this.c=i},toBarycentric:function(t){var e=b.sub(this.a).cross(this.c.sub(this.a)),i=e.getNormalized(),n=i.dot(e),s=i.dot(this.b.sub(t).cross(this.c.sub(t))),o=s/n,a=i.dot(this.c.sub(t).cross(this.a.sub(t))),h=a/n,u=1-o-h;return new r(o,h,u)},toString:function(){return"Triangle: "+this.a+","+this.b+","+this.c}},i.exports=h});